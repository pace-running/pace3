name: BuildTestDeploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run backend linting and testing
        run: cd backend && ./run quality_check
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Run frontend linting and testing
        run: cd frontend/pace-ui && npm install && ./run quality_check
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: self-hosted
    needs: [ test-backend, test-frontend ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: registry.k3s.colodeck.de
          username: github
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push pace3
        uses: docker/build-push-action@v3
        with:
          context: ./backend/
          file: ./backend/Dockerfile
          push: true
          tags: registry.k3s.colodeck.de/pace3:latest
      - name: Build and push migration
        uses: docker/build-push-action@v3
        with:
          context: ./backend/
          file: ./backend/Dockerfile.migration
          push: true
          tags: registry.k3s.colodeck.de/pace3-migration:latest
      - name: Build and push pace3 frontend
        uses: docker/build-push-action@v3
        with:
          context: ./frontend/pace-ui/
          file: ./frontend/pace-ui/Dockerfile
          push: true
          tags: registry.k3s.colodeck.de/pace3-frontend:latest
  deploy-dev:
    if: github.ref == 'refs/heads/main'
    runs-on: self-hosted
    needs: build
    env:
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
    steps:
      - uses: actions/checkout@v3
      - name: deploy
        run: kubectl apply -k infra-setup/dev
      - name: reload
        run: kubectl -n pace3 rollout restart deployment pace3-deployment
      - name: wait
        run: kubectl -n pace3 rollout status deployment pace3-deployment --timeout=2200s
  cypress-run:
    runs-on: ubuntu-20.04
    needs: deploy-dev
    env:
      CYPRESS_BASE_URL: "https://pace3.lauf-gegen-rechts.de/"
    steps:
      - uses: actions/checkout@v3
      - uses: cypress-io/github-action@v4
        with:
          working-directory: cypress
          spec: cypress/e2e/user/registration.cy.js
  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: self-hosted
    needs: cypress-run
    env:
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
    steps:
      - uses: actions/checkout@v3
      - name: deploy
        run: kubectl apply -k infra-setup/prod
      - name: reload
        run: kubectl -n pace3-prod rollout restart deployment pace3-deployment
      - name: wait
        run: kubectl -n pace3-prod rollout status deployment pace3-deployment --timeout=2200s

